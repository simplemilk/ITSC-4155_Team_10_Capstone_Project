{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordPage() {\n  _s();\n  var _location$state;\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:4000/api/reset-password-security', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      setMessage(data.message || 'Password has been reset.');\n      if (data.success) {\n        setTimeout(() => navigate('/login'), 2000);\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setMessage('Error resetting password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          required: true,\n          minLength: 6,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordPage, \"2Q2w1Sr7c5UUhzJoTLrw074YDU8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPasswordPage","_s","_location$state","newPassword","setNewPassword","message","setMessage","navigate","location","email","state","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","required","minLength","onChange","target","_c","$RefreshReg$"],"sources":["/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css';\n\nfunction ResetPasswordPage() {\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = location.state?.email || '';\n\n  const handleSubmit = async (e) => {\n  e.preventDefault();\n  setMessage('');\n  try {\n    const res = await fetch('http://localhost:4000/api/reset-password-security', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, newPassword }),\n    });\n    const data = await res.json();\n    setMessage(data.message || 'Password has been reset.');\n    if (data.success) {\n      setTimeout(() => navigate('/login'), 2000);\n    }\n  } catch (err) {\n    console.error('Error resetting password:', err);\n    setMessage('Error resetting password.');\n  }\n};\n\n  return (\n    <div className=\"reset-password-container\">\n      <h2>Set New Password</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          New Password:\n          <input\n            type=\"password\"\n            value={newPassword}\n            required\n            minLength={6}\n            onChange={e => setNewPassword(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default ResetPasswordPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAG,EAAAP,eAAA,GAAAM,QAAQ,CAACE,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBO,KAAK,KAAI,EAAE;EAEzC,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,KAAK;UAAEN;QAAY,CAAC;MAC7C,CAAC,CAAC;MACF,MAAMkB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BhB,UAAU,CAACe,IAAI,CAAChB,OAAO,IAAI,0BAA0B,CAAC;MACtD,IAAIgB,IAAI,CAACE,OAAO,EAAE;QAChBC,UAAU,CAAC,MAAMjB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/CnB,UAAU,CAAC,2BAA2B,CAAC;IACzC;EACF,CAAC;EAEC,oBACEP,OAAA;IAAK6B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC9B,OAAA;MAAA8B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlC,OAAA;MAAMmC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3B9B,OAAA;QAAA8B,QAAA,GAAO,eAEL,eAAA9B,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEjC,WAAY;UACnBkC,QAAQ;UACRC,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAE3B,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAAC4B,MAAM,CAACJ,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRlC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACN5B,OAAO,iBAAIN,OAAA;MAAA8B,QAAA,EAAIxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAChC,EAAA,CA9CQD,iBAAiB;EAAA,QAGPH,WAAW,EACXD,WAAW;AAAA;AAAA6C,EAAA,GAJrBzC,iBAAiB;AAgD1B,eAAeA,iBAAiB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}