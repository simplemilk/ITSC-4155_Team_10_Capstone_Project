{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordPage() {\n  _s();\n  var _location$state, _location$state2;\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  const favoriteColor = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.favoriteColor;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n    if (newPassword.length < 6) {\n      setMessage('Password must be at least 6 characters long.');\n      return;\n    }\n    if (!email || !favoriteColor) {\n      setMessage('Session expired. Please restart the password reset process.');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:4000/api/reset-password-security', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          favoriteColor,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      setMessage(data.message || 'Password has been reset.');\n      if (data.success) {\n        setTimeout(() => navigate('/login'), 2000);\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setMessage('Error resetting password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-password-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          minLength: \"6\",\n          placeholder: \"Enter new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          minLength: \"6\",\n          placeholder: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.includes('successfully') ? 'success' : 'error'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordPage, \"ZtlYyAggmF9qcAaNas8QljchP6w=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage; // Add this line\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ResetPasswordPage","_s","_location$state","_location$state2","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","location","email","state","favoriteColor","handleSubmit","e","preventDefault","length","res","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","err","console","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","minLength","placeholder","includes","_c","$RefreshReg$"],"sources":["/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './ResetPassword.css';\n\nfunction ResetPasswordPage() {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = location.state?.email;\n  const favoriteColor = location.state?.favoriteColor;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    if (newPassword.length < 6) {\n      setMessage('Password must be at least 6 characters long.');\n      return;\n    }\n\n    if (!email || !favoriteColor) {\n      setMessage('Session expired. Please restart the password reset process.');\n      return;\n    }\n\n    try {\n      const res = await fetch('http://localhost:4000/api/reset-password-security', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, favoriteColor, newPassword }),\n      });\n      const data = await res.json();\n      setMessage(data.message || 'Password has been reset.');\n      \n      if (data.success) {\n        setTimeout(() => navigate('/login'), 2000);\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setMessage('Error resetting password.');\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <form className=\"reset-password-form\" onSubmit={handleSubmit}>\n        <h2>Reset Password</h2>\n        \n        <div className=\"form-group\">\n          <label>New Password:</label>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n            minLength=\"6\"\n            placeholder=\"Enter new password\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Confirm Password:</label>\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            minLength=\"6\"\n            placeholder=\"Confirm new password\"\n          />\n        </div>\n\n        <button type=\"submit\">Reset Password</button>\n\n        {message && (\n          <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>\n            {message}\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default ResetPasswordPage; // Add this line"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}