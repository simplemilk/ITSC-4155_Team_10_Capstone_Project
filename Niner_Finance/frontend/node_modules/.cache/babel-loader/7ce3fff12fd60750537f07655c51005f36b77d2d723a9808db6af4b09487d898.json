{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ForgetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// TODO: Implement Email reset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [favoriteColor, setFavoriteColor] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const res = await fetch('/api/reset-password-security', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          favoriteColor,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      setMessage(data.message || 'Password reset complete.');\n    } catch {\n      setMessage('Error resetting password.');\n    }\n  };\n  const handleCancel = () => {\n    navigate(-1); // Go back to previous page, hiding the forgot password page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: 'auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forget Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          required: true,\n          onChange: e => setEmail(e.target.value),\n          style: {\n            width: '100%',\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Security Question: What is your favorite color?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: favoriteColor,\n          required: true,\n          onChange: e => setFavoriteColor(e.target.value),\n          style: {\n            width: '100%',\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          required: true,\n          minLength: 6,\n          onChange: e => setNewPassword(e.target.value),\n          style: {\n            width: '100%',\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 15\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordPage, \"jurHWhzcDJzXp29SA8ma5DcL+cA=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","favoriteColor","setFavoriteColor","newPassword","setNewPassword","message","setMessage","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","handleCancel","navigate","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","required","onChange","target","width","marginBottom","minLength","marginTop","_c","$RefreshReg$"],"sources":["/Users/jonathanpark/Documents/GitHub/ITSC-4155_Team_10_Capstone_Project/Niner_Finance/frontend/src/pages/ForgetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// TODO: Implement Email reset\nfunction ForgotPasswordPage() {\n  const [email, setEmail] = useState('');\n  const [favoriteColor, setFavoriteColor] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const res = await fetch('/api/reset-password-security', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, favoriteColor, newPassword }),\n      });\n      const data = await res.json();\n      setMessage(data.message || 'Password reset complete.');\n    } catch {\n      setMessage('Error resetting password.');\n    }\n  };\n\n  const handleCancel = () => {\n  navigate(-1); // Go back to previous page, hiding the forgot password page\n  };\n    \n  return (\n    <div style={{ maxWidth: 400, margin: 'auto', padding: 20 }}>\n      <h2>Forget Password?</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n            style={{ width: '100%', marginBottom: 10 }}\n          />\n        </label>\n        <label>\n          Security Question: What is your favorite color?\n          <input\n            type=\"text\"\n            value={favoriteColor}\n            required\n            onChange={e => setFavoriteColor(e.target.value)}\n            style={{ width: '100%', marginBottom: 10 }}\n          />\n        </label>\n        <label>\n          New Password:\n          <input\n            type=\"password\"\n            value={newPassword}\n            required\n            minLength={6}\n            onChange={e => setNewPassword(e.target.value)}\n            style={{ width: '100%', marginBottom: 10 }}\n          />\n        </label>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n      {message && <p style={{ marginTop: 15 }}>{message}</p>}\n    </div>\n  );\n}\n\nexport default ForgotPasswordPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,KAAK;UAAEE,aAAa;UAAEE;QAAY,CAAC;MAC5D,CAAC,CAAC;MACF,MAAMc,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BZ,UAAU,CAACW,IAAI,CAACZ,OAAO,IAAI,0BAA0B,CAAC;IACxD,CAAC,CAAC,MAAM;MACNC,UAAU,CAAC,2BAA2B,CAAC;IACzC;EACF,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IAC3BC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EAED,oBACExB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACzD7B,OAAA;MAAA6B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjC,OAAA;MAAMkC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3B7B,OAAA;QAAA6B,QAAA,GAAO,QAEL,eAAA7B,OAAA;UACEmC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEjC,KAAM;UACbkC,QAAQ;UACRC,QAAQ,EAAE1B,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAAC2B,MAAM,CAACH,KAAK,CAAE;UACxCX,KAAK,EAAE;YAAEe,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAG;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjC,OAAA;QAAA6B,QAAA,GAAO,iDAEL,eAAA7B,OAAA;UACEmC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE/B,aAAc;UACrBgC,QAAQ;UACRC,QAAQ,EAAE1B,CAAC,IAAIN,gBAAgB,CAACM,CAAC,CAAC2B,MAAM,CAACH,KAAK,CAAE;UAChDX,KAAK,EAAE;YAAEe,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAG;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjC,OAAA;QAAA6B,QAAA,GAAO,eAEL,eAAA7B,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE7B,WAAY;UACnB8B,QAAQ;UACRK,SAAS,EAAE,CAAE;UACbJ,QAAQ,EAAE1B,CAAC,IAAIJ,cAAc,CAACI,CAAC,CAAC2B,MAAM,CAACH,KAAK,CAAE;UAC9CX,KAAK,EAAE;YAAEe,KAAK,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAG;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACNxB,OAAO,iBAAIT,OAAA;MAAGyB,KAAK,EAAE;QAAEkB,SAAS,EAAE;MAAG,CAAE;MAAAd,QAAA,EAAEpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAC/B,EAAA,CAlEQD,kBAAkB;AAAA2C,EAAA,GAAlB3C,kBAAkB;AAoE3B,eAAeA,kBAAkB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}